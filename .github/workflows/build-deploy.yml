name: Python API Development

on:
  push:
    paths:
      - 'Python API Development - Comprehensive Course for Beginners/**'
  pull_request:
    paths:
      - 'Python API Development - Comprehensive Course for Beginners/**'

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          sparse-checkout: true
          sparse-checkout-pattern: 'Python API Development - Comprehensive Course for Beginners'
      - name: Say Hi Subin
        run: echo "Hi Subin"
      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r "Python API Development - Comprehensive Course for Beginners/requirements.txt"
      - name: Run tests
        run: |
          cd "Python API Development - Comprehensive Course for Beginners"
          pip install pytest
          pytest
  deploy:
    runs-on: ubuntu-20.04
    needs: [build]
    environment:
      name: testing
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
        with:
          sparse-checkout: true
          sparse-checkout-pattern: 'Python API Development - Comprehensive Course for Beginners'
      # - name: deploying to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
      #     heroku_email: ${{secrets.HEROKU_EMAIL}}

      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd app/src
            git pull
            echo "Running sudo command..."
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart fastapi
            echo "Sudo command executed successfully."
            echo "Checking systemctl status..."
            ls
            systemctl status fastapi
      # login to our ubuntu
      # cd /app/src
      # git pull
      # systemctl restart api